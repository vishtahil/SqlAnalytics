{
  "ContentConfiguration": {
    "Content": [
      {
        "Name": "BLOCK_SELECT",
        "Quote": "Select * returns too much data.",
        "Cite": "Jon Galloway https://weblogs.asp.net/",
        "Href": "https://weblogs.asp.net/jongalloway/the-real-reason-select-queries-are-bad-index-coverage"
      },
      {
        "Name": "BLOCK_SELECT",
        "Quote": "SELECT * makes the Table / Index.",
        "Cite": "Jon Galloway https://weblogs.asp.net/",
        "Href": "https://weblogs.asp.net/jongalloway/the-real-reason-select-queries-are-bad-index-coverage"
      },
      {
        "Name": "BLOCK_SELECT",
        "Quote": "SELECT * is bad from application.",
        "Cite": "Jon Galloway https://weblogs.asp.net/",
        "Href": "https://weblogs.asp.net/jongalloway/the-real-reason-select-queries-are-bad-index-coverage"
      },
      {
        "Name": "ORDER_BY",
        "Quote": "Avoid ORDER BY. Sort in the application instead.",
        "Cite": "Brent Ozar https://www.brentozar.com/",
        "Href": "https://www.brentozar.com/archive/2013/02/7-things-developers-should-know-about-sql-server/"
      },
      {
        "Name": "WHERE_NOT_EQUAL_TO",
        "Quote": "Avoid Using Not Equal in WHERE Clause.",
        "Cite": "Ben Snaidero https://www.mssqltips.com/sqlserverauthor/74/ben-snaidero/",
        "Href": "https://www.mssqltips.com/sqlservertutorial/3203/avoid-using-not-equal-in-where-clause/"
      },
      {
        "Name": "WHERE_FUNCTION_PRECEEDING",
        "Quote": "Avoid SQL Server functions in the WHERE clause for Performance.",
        "Cite": "Greg Robidoux https://www.mssqltips.com/sqlserverauthor/37/greg-robidoux/",
        "Href": "https://www.mssqltips.com/sqlservertip/1236/avoid-sql-server-functions-in-the-where-clause-for-performance/"
      },
      {
        "Name": "CORRELATED_QUERY",
        "Quote": "SQL server performance – Death by correlated subqueries.",
        "Cite": "Håkan Winthe",
        "Href": "http://www.sqlservice.se/sql-server-performance-death-by-correlated-subqueries/"
      },
      {
        "Name": "CORRELATED_QUERY",
        "Quote": "Correlated sub queries for good or evil?",
        "Cite": "Greg Robidoux https://www.mssqltips.com/sqlserverauthor/37/greg-robidoux/",
        "Href": "http://jahaines.blogspot.com/2009/06/correlated-sub-queries-for-good-or-evil.html"
      },
      {
        "Name": "CORRELATED_QUERY",
        "Quote": "Is there a performance difference between CTE , Sub-Query, Temporary Table or Table Variable?",
        "Cite": "Adam Haines",
        "Href": "http://stackoverflow.com/questions/11169550/is-there-a-performance-difference-between-cte-sub-query-temporary-table-or-ta/11169910#11169910"
      },
      {
        "Name": "CROSS_JOIN",
        "Quote": "Identifying and Eliminating the Dreaded Cartesian Product",
        "Cite": "Rob Gravelle ",
        "Href": "http://www.databasejournal.com/features/mysql/article.php/3901221/Identifying-and-Eliminating-the-Dreaded-Cartesian-Product.htm"
      },
      {
        "Name": "LIKE_BEGIN",
        "Quote": "Sargability: Why %string% Is Slow",
        "Cite": "Brent Ozar https://www.brentozar.com/archive/author/brento/",
        "Href": "https://www.brentozar.com/archive/2010/06/sargable-why-string-is-slow/"
      },
      {
        "Name": "LIKE_BEGIN",
        "Quote": "SQL Wildcard Search - Efficiency?",
        "Cite": "stackoverflow.com  http://stackoverflow.com",
        "Href": "http://stackoverflow.com/questions/11795770/sql-wildcard-search-efficiency"
      },
      {
        "Name": "Hash Match",
        "Quote": "Hash Match – SQL Server Graphical Execution Plan",
        "Cite": "thinknook.com",
        "Href": "http://thinknook.com/hash-match-sql-server-graphical-execution-plan-2012-03-25/"
      },
      {
        "Name": "Index Scan",
        "Quote": "SQL SERVER – Index Seek Vs. Index Scan (Table Scan)",
        "Cite": "Pinal Dave https://blog.sqlauthority.com/",
        "Href": "https://blog.sqlauthority.com/2007/03/30/sql-server-index-seek-vs-index-scan-table-scan/"
      },
      {
        "Name": "Index Scan",
        "Quote": "Index Scans and Table Scans",
        "Cite": "Greg Robidoux https://www.mssqltips.com/sqlserverauthor/37/greg-robidoux/",
        "Href": "https://www.mssqltips.com/sqlservertutorial/277/index-scans-and-table-scans/"
      },
      {
        "Name": "Table Scan",
        "Quote": "Index Scans and Table Scans",
        "Cite": "Greg Robidoux https://www.mssqltips.com/sqlserverauthor/37/greg-robidoux/",
        "Href": "https://www.mssqltips.com/sqlservertutorial/277/index-scans-and-table-scans/"
      },
      {
        "Name": "Stream Aggregate",
        "Quote": "Stream Aggregate Operator",
        "Cite": "Fabiano Amorim https://www.simple-talk.com/author/fabiano-amorim/",
        "Href": "https://www.simple-talk.com/sql/learn-sql-server/showplan-operator-of-the-week-stream-aggregate/"
      },
      {
        "Name": "Compute Scalar",
        "Quote": "Compute Scalar Operator",
        "Cite": "Fabiano Amorim https://www.simple-talk.com/author/fabiano-amorim/",
        "Href": "https://www.simple-talk.com/sql/learn-sql-server/showplan-operator-of-the-week-compute-scalar/"
      },
      {
        "Name": "Sort",
        "Quote": "Split, Sort, Collapse Operator",
        "Cite": "Fabiano Amorim https://www.simple-talk.com/author/fabiano-amorim/",
        "Href": "https://www.simple-talk.com/sql/learn-sql-server/showplan-operator-of-the-week-split-sort-collapse/"
      },
      {
        "Name": "Sort",
        "Quote": "Sort Operator",
        "Cite": "Fabiano Amorim https://www.simple-talk.com/author/fabiano-amorim/",
        "Href": "https://www.simple-talk.com/sql/learn-sql-server/showplan-operator-of-the-week-sort/"
      },
      {
        "Name": "Merge Join",
        "Quote": "Merge Join Operator",
        "Cite": "Fabiano Amorim https://www.simple-talk.com/author/fabiano-amorim/",
        "Href": "https://www.simple-talk.com/sql/learn-sql-server/showplan-operator-of-the-week-stream-aggregate/"
      },
      {
        "Name": "Nested Loops",
        "Quote": "Nested Loops Join – SQL Server Graphical Execution Plan",
        "Cite": "http://thinknook.com",
        "Href": "http://thinknook.com/nested-loop-join-sql-server-graphical-execution-plan-2012-03-25/"
      },
      {
        "Name": "Key Lookup",
        "Quote": "How To Eliminate Key Lookups in SQL Server",
        "Cite": "Glenn Berry",
        "Href": "https://sqlserverperformance.wordpress.com/2010/06/09/how-to-eliminate-key-lookups-in-sql-server-2008/"
      },
      {
        "Name": "Index Seek",
        "Quote": "SQL SERVER – Index Seek Vs. Index Scan (Table Scan)",
        "Cite": "Pinal Dave https://blog.sqlauthority.com/",
        "Href": "https://blog.sqlauthority.com/2007/03/30/sql-server-index-seek-vs-index-scan-table-scan/"
      },
      {
        "Name": "Clustered Index Scan",
        "Quote": "What Clustered Index Scan (Clustered)” means on SQL Server execution plan?",
        "Cite": "stackoverflow.com",
        "Href": "http://stackoverflow.com/questions/31949355/what-clustered-index-scan-clustered-means-on-sql-server-execution-plan"
      },
      {
        "Name": "Clustered Index Scan",
        "Quote": "Identifying and Solving Index Scan Problems",
        "Cite": "Dennes Torres https://www.simple-talk.com/author/dennes-torres/",
        "Href": "https://www.simple-talk.com/sql/performance/identifying-and-solving-index-scan-problems/"
      }
    ]
  }
}